{"version":3,"sources":["config/urls.ts","components/CustomInput/CustomInput.tsx","components/Form/Registration/Registration.tsx","components/Form/Login/Login.tsx","components/Form/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["URLS","registr","login","useStyles","makeStyles","theme","formItem","width","color","blue","marginBottom","spacing","borderRadius","borderColor","CustomInput","handler","id","label","classes","TextField","onChange","variant","className","form","height","display","alignItems","justifyContent","flexWrap","textInputs","inputs","Registration","useState","fd","setFd","formHandler","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","handleChange","target","value","onSubmit","noValidate","autoComplete","map","input","type","Login","root","layout","padding","backgroundColor","grey","tabBar","TabPanel","props","children","index","other","role","hidden","aria-labelledby","a11yProps","Form","setValue","Paper","AppBar","position","Tabs","event","newValue","aria-label","Tab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfb00ebb.chunk.js","sourcesContent":["const URLS = {\n  registr: \"http://127.0.0.1:8000/api/v1/users/\",\n  login: \"http://127.0.0.1:8000/api/v1/users/login/\",\n};\n\nexport default URLS;\n","import TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { ChangeEvent } from \"react\";\n\nexport interface CustomInputProps {\n  id: string;\n  label?: string;\n  handler?: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formItem: {\n    width: \"100%\",\n    color: blue[800],\n    \"&:not(:last-child)\": {\n      marginBottom: theme.spacing(2),\n    },\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"16px\",\n      \"& input\": {},\n      \"& fieldset\": {\n        borderColor: blue[800],\n      },\n      \"&:hover fieldset\": {\n        borderColor: blue[800],\n      },\n    },\n  },\n}));\n\nconst CustomInput = ({ handler, id, label }: CustomInputProps) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      onChange={handler}\n      variant=\"outlined\"\n      className={classes.formItem}\n      id={id}\n      label={label}\n    />\n  );\n};\n\nexport default CustomInput;\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { ChangeEvent, useState } from \"react\";\nimport URLS from \"../../../config/urls\";\nimport { IRegistrationForm } from \"../Form\";\nimport CustomInput from \"../../CustomInput\";\nimport { CustomInputProps } from \"../../CustomInput/CustomInput\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n  },\n  textInputs: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n}));\n\nconst inputs: CustomInputProps[] = [\n  {\n    id: \"email\",\n    label: \"Email\",\n  },\n  {\n    id: \"password\",\n    label: \"Пароль\",\n  },\n  {\n    id: \"name\",\n    label: \"Имя\",\n  },\n  {\n    id: \"sumname\",\n    label: \"Фамилия\",\n  },\n  {\n    id: \"patronymic\",\n    label: \"Отчество\",\n  },\n  {\n    id: \"group\",\n    label: \"Группа\",\n  },\n];\n\nconst Registration = () => {\n  const classes = useStyles();\n  const [fd, setFd] = useState<IRegistrationForm>({} as IRegistrationForm);\n\n  const formHandler = async (e: any) => {\n    e.preventDefault();\n\n    await fetch(URLS.registr, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(fd),\n    });\n  };\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    setFd({ ...fd, [e?.target?.id]: e.target.value });\n  };\n\n  return (\n    <form\n      onSubmit={formHandler}\n      className={classes.form}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div className={classes.textInputs}>\n        {inputs.map((input) => (\n          <CustomInput handler={handleChange} {...input} />\n        ))}\n        <input type=\"submit\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Registration;\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { ChangeEvent, useState } from \"react\";\nimport URLS from \"../../../config/urls\";\nimport CustomInput, { CustomInputProps } from \"../../CustomInput/CustomInput\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n  },\n  textInputs: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n}));\n\nconst inputs: CustomInputProps[] = [\n  {\n    id: \"email\",\n    label: \"Email\",\n  },\n  {\n    id: \"password\",\n    label: \"Пароль\",\n  },\n];\n\nexport interface ILoginForm {\n  login: string;\n  password: string;\n}\n\nconst Login = () => {\n  const classes = useStyles();\n  const [fd, setFd] = useState<ILoginForm>({} as ILoginForm);\n\n  const formHandler = async (e: any) => {\n    e.preventDefault();\n\n    await fetch(URLS.login, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(fd),\n    });\n  };\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    setFd({ ...fd, [e?.target?.id]: e.target.value });\n  };\n\n  return (\n    <form onSubmit={formHandler} className={classes.form}>\n      <div className={classes.textInputs}>\n        {inputs.map((input) => (\n          <CustomInput handler={handleChange} {...input} />\n        ))}\n        <input type=\"submit\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { useState } from \"react\";\nimport Registration from \"./Registration\";\nimport Login from \"./Login\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  layout: {\n    padding: \"32px 32px\",\n    width: theme.spacing(64),\n    height: theme.spacing(64),\n    backgroundColor: grey[200],\n    borderRadius: \"16px\",\n  },\n  tabBar: {\n    marginBottom: theme.spacing(2),\n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nexport interface IRegistrationForm {\n  email: string;\n  password: string;\n  name: string;\n  sumname: string;\n  patronymic: string;\n  group: string;\n}\n\nexport interface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst Form = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.layout} variant=\"outlined\">\n        <AppBar className={classes.tabBar} position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Вход\" {...a11yProps(0)} />\n            <Tab label=\"Регистрация\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Login />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Registration />\n        </TabPanel>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}